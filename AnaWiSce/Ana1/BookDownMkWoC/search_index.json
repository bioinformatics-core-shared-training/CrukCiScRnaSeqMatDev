[["identifying-confounding-factors-caron-set.html", "Chapter 9 Identifying confounding factors - Caron set 9.1 Session information", " Chapter 9 Identifying confounding factors - Caron set normPlotDirBit &lt;- &quot;Plots/Norm&quot; # &quot;ConfoundPlots&quot; #setNameUpp &lt;- &quot;Caron&quot; #setNameLow &lt;- &quot;caron&quot; setName &lt;- tolower(&quot;Caron&quot;) setSuf &lt;- &quot;_5hCellPerSpl&quot; typeNorm &lt;- &quot;scran&quot; projDir &lt;- params$projDir dirRel &lt;- params$dirRel outDirBit &lt;- params$outDirBit caron Load object # Read object in: tmpFn &lt;- sprintf(&quot;%s/%s/Robjects/%s_sce_nz_postDeconv%s.Rds&quot;, projDir, outDirBit, setName, setSuf) tmpFn ## [1] &quot;/ssd/personal/baller01/20200511_FernandesM_ME_crukBiSs2020/AnaWiSce/Ana1/Robjects/caron_sce_nz_postDeconv_5hCellPerSpl.Rds&quot; #getwd() #file.exists(tmpFn) sce &lt;- readRDS(tmpFn) sce ## class: SingleCellExperiment ## dim: 16629 5500 ## metadata(0): ## assays(2): counts logcounts ## rownames(16629): ENSG00000237491 ENSG00000225880 ... ENSG00000275063 ## ENSG00000271254 ## rowData names(11): ensembl_gene_id external_gene_name ... detected ## gene_sparsity ## colnames: NULL ## colData names(16): Barcode Run ... cell_sparsity sizeFactor ## reducedDimNames(0): ## altExpNames(0): Remember scran PCA: Normalised counts are stored in ‘logcounts’ assay # scranPca &lt;- runPCA( sce, exprs_values = &quot;logcounts&quot; ) PCA plot for the ‘scran’ counts in the caron set. tmpFn &lt;- sprintf(&quot;%s/%s/%s/%s_sce_nz_postQc%s_%sPca.png&quot;, #projDir, outDirBit, normPlotDirBit, setName, setSuf, typeNorm) dirRel, normPlotDirBit, setName, setSuf, typeNorm) tmpFn knitr::include_graphics(tmpFn, auto_pdf = TRUE) #options(BiocSingularParam.default=IrlbaParam()) options(BiocSingularParam.default=ExactParam()) qclust &lt;- quickCluster(sce, min.size = 30, use.ranks = FALSE) sce &lt;- computeSumFactors(sce, sizes = 15, clusters = qclust) sce &lt;- logNormCounts(sce) Perform PCA: reducedDim(sce, &quot;PCA&quot;) &lt;- reducedDim( runPCA(sce, exprs_values = &quot;logcounts&quot;, ncomponents = 10), &quot;PCA&quot;) plotPCA( sce, colour_by = &quot;Sample.Name&quot;, size_by = &quot;sum&quot;, shape_by = &quot;source_name&quot; ) assay(sce, &quot;logcounts_raw&quot;) &lt;- log2(counts(sce)+1) # on norm count https://biocellgen-public.svi.edu.au/mig_2019_scrnaseq-workshop/public/normalization-confounders-and-batch-correction.html#identifying-confounding-factors # on logcounts_raw https://scrnaseq-course.cog.sanger.ac.uk/website/cleaning-the-expression-matrix.html#correlations-with-pcs # a bit long # issue with scale, trying with explanPc/100 # see next chunk too explanPc &lt;- getExplanatoryPCs( sce, exprs_values = &quot;logcounts_raw&quot;, variables = c( &quot;sum&quot;, &quot;detected&quot;, &quot;source_name&quot;, &quot;Sample.Name&quot;, &quot;subsets_Mito_percent&quot; ) ) plotExplanatoryPCs(explanPc/100) # on logcounts_raw # https://biocellgen-public.svi.edu.au/mig_2019_scrnaseq-workshop/public/normalization-confounders-and-batch-correction.html#identifying-confounding-factors plotExplanatoryVariables( sce, exprs_values = &quot;logcounts_raw&quot;, #exprs_values = &quot;counts&quot;, #exprs_values = &quot;logcounts&quot;, variables = c( &quot;sum&quot;, &quot;detected&quot;, &quot;source_name&quot;, &quot;Sample.Name&quot;, &quot;subsets_Mito_percent&quot; ) ) Correlation with PCs: logcounts (normalised): # on norm count https://biocellgen-public.svi.edu.au/mig_2019_scrnaseq-workshop/public/normalization-confounders-and-batch-correction.html#identifying-confounding-factors # on logcounts_raw https://scrnaseq-course.cog.sanger.ac.uk/website/cleaning-the-expression-matrix.html#correlations-with-pcs # a bit long colData(sce)$source_name &lt;- factor(colData(sce)$source_name) explanPc &lt;- getExplanatoryPCs(sce, #exprs_values = &quot;logcounts&quot;, # default variables = c( &quot;sum&quot;, &quot;detected&quot;, &quot;source_name&quot;, &quot;Sample.Name&quot;, &quot;subsets_Mito_percent&quot; ) ) plotExplanatoryPCs(explanPc/100) Explanatory variables: logcounts (normalised): # on logcounts_raw # https://biocellgen-public.svi.edu.au/mig_2019_scrnaseq-workshop/public/normalization-confounders-and-batch-correction.html#identifying-confounding-factors plotExplanatoryVariables( sce, # exprs_values = &quot;logcounts&quot;, # default variables = c( &quot;sum&quot;, &quot;detected&quot;, &quot;source_name&quot;, &quot;Sample.Name&quot;, &quot;subsets_Mito_percent&quot; ) ) 9.1 Session information sessionInfo() ## R version 4.0.3 (2020-10-10) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: CentOS Linux 8 (Core) ## ## Matrix products: default ## BLAS: /opt/R/R-4.0.3/lib64/R/lib/libRblas.so ## LAPACK: /opt/R/R-4.0.3/lib64/R/lib/libRlapack.so ## ## locale: ## [1] LC_CTYPE=en_GB.UTF-8 LC_NUMERIC=C ## [3] LC_TIME=en_GB.UTF-8 LC_COLLATE=en_GB.UTF-8 ## [5] LC_MONETARY=en_GB.UTF-8 LC_MESSAGES=en_GB.UTF-8 ## [7] LC_PAPER=en_GB.UTF-8 LC_NAME=C ## [9] LC_ADDRESS=C LC_TELEPHONE=C ## [11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C ## ## attached base packages: ## [1] parallel stats4 stats graphics grDevices utils datasets ## [8] methods base ## ## other attached packages: ## [1] BiocSingular_1.6.0 dplyr_1.0.5 ## [3] scran_1.18.7 scater_1.18.6 ## [5] ggplot2_3.3.3 SingleCellExperiment_1.12.0 ## [7] SummarizedExperiment_1.20.0 Biobase_2.50.0 ## [9] GenomicRanges_1.42.0 GenomeInfoDb_1.26.7 ## [11] IRanges_2.24.1 S4Vectors_0.28.1 ## [13] BiocGenerics_0.36.1 MatrixGenerics_1.2.1 ## [15] matrixStats_0.58.0 knitr_1.32 ## ## loaded via a namespace (and not attached): ## [1] viridis_0.5.1 edgeR_3.32.1 ## [3] sass_0.3.1 jsonlite_1.7.2 ## [5] viridisLite_0.3.0 DelayedMatrixStats_1.12.3 ## [7] scuttle_1.0.4 bslib_0.2.4 ## [9] assertthat_0.2.1 statmod_1.4.35 ## [11] highr_0.8 dqrng_0.2.1 ## [13] GenomeInfoDbData_1.2.4 vipor_0.4.5 ## [15] yaml_2.2.1 pillar_1.6.0 ## [17] lattice_0.20-41 limma_3.46.0 ## [19] glue_1.4.2 beachmat_2.6.4 ## [21] digest_0.6.27 XVector_0.30.0 ## [23] colorspace_2.0-0 cowplot_1.1.1 ## [25] htmltools_0.5.1.1 Matrix_1.2-18 ## [27] pkgconfig_2.0.3 bookdown_0.21 ## [29] zlibbioc_1.36.0 purrr_0.3.4 ## [31] scales_1.1.1 BiocParallel_1.24.1 ## [33] tibble_3.1.1 farver_2.1.0 ## [35] generics_0.1.0 ellipsis_0.3.1 ## [37] withr_2.4.2 magrittr_2.0.1 ## [39] crayon_1.4.1 evaluate_0.14 ## [41] fansi_0.4.2 bluster_1.0.0 ## [43] beeswarm_0.2.3 tools_4.0.3 ## [45] lifecycle_1.0.0 stringr_1.4.0 ## [47] locfit_1.5-9.4 munsell_0.5.0 ## [49] DelayedArray_0.16.3 irlba_2.3.3 ## [51] compiler_4.0.3 jquerylib_0.1.3 ## [53] rsvd_1.0.3 rlang_0.4.10 ## [55] grid_4.0.3 RCurl_1.98-1.3 ## [57] BiocNeighbors_1.8.2 rstudioapi_0.13 ## [59] igraph_1.2.6 labeling_0.4.2 ## [61] bitops_1.0-6 rmarkdown_2.7 ## [63] gtable_0.3.0 DBI_1.1.1 ## [65] R6_2.5.0 gridExtra_2.3 ## [67] utf8_1.2.1 stringi_1.5.3 ## [69] ggbeeswarm_0.6.0 Rcpp_1.0.6 ## [71] vctrs_0.3.7 tidyselect_1.1.0 ## [73] xfun_0.22 sparseMatrixStats_1.2.1 "]]
