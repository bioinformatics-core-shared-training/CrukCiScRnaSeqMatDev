[["AliFeatCountTop.html", "Chapter 3 Alignment and feature counting 3.1 Introduction 3.2 10X cellranger pipeline in brief 3.3 sample sheet 3.4 10X cellranger reports for CaronBourque2020 3.5 10X cellranger reports for HCA’s adult BMMCs", " Chapter 3 Alignment and feature counting 3.1 Introduction We will use two sets of Bone Marrow Mononuclear Cells (BMMC): ‘CaronBourque2020’: pediatric samples ‘Hca’: HCA Census of Immune Cells for adult BMMCs Fastq files were retrieved from publicly available archive (SRA and HCA). Sequencing quality was assessed and visualised using fastQC and MultiQC. Reads were aligned against GRCh38 and features counted using cellranger (v3.1.0). #wrkDir &lt;- &quot;/mnt/scratchb/bioinformatics/baller01/20200511_FernandesM_ME_crukBiSs2020/CaronBourque2020/grch38300&quot; #setwd(wrkDir) projDir &lt;- params$projDir #projDirLink &lt;- &quot;/Users/baller01/MyMount/svr008ssd/20200511_FernandesM_ME_crukBiSs2020&quot; projDirLink &lt;- gsub(&quot;/ssd/personal/baller01&quot;, &quot;/Users/baller01/MyMount/svr008ssd&quot;, projDir) inpDirBit &lt;- params$inpDirBit # &quot;AnaWiSeurat/Attempt1&quot; outDirBit &lt;- params$outDirBit # &quot;AnaWiSeurat/Attempt1&quot; plotDir &lt;- &quot;QcPlots&quot; # eg # cellrangerDirLink &lt;- sprintf(&quot;%s/%s/grch38300&quot;, projDirLink, &quot;CaronBourque2020&quot;) 3.2 10X cellranger pipeline in brief Each sample was analysed separately with cellranger. This pipeline “is a set of analysis pipelines that process Chromium single-cell RNA-seq output to align reads, generate feature-barcode matrices and perform clustering and gene expression analysis.” TODO Add code to call cellranger 3.3 sample sheet # CaronBourque2020 cb_sampleSheetFn &lt;- file.path(projDir, &quot;Data/CaronBourque2020/SraRunTable.txt&quot;) # Human Cell Atlas hca_sampleSheetFn &lt;- file.path(projDir, &quot;Data/Hca/accList_Hca.txt&quot;) # read sample sheet in: splShtColToKeep &lt;- c(&quot;Run&quot;, &quot;Sample.Name&quot;, &quot;source_name&quot;) cb_sampleSheet &lt;- read.table(cb_sampleSheetFn, header=T, sep=&quot;,&quot;) hca_sampleSheet &lt;- read.table(hca_sampleSheetFn, header=F, sep=&quot;,&quot;) colnames(hca_sampleSheet) &lt;- &quot;Sample.Name&quot; hca_sampleSheet$Run &lt;- hca_sampleSheet$Sample.Name hca_sampleSheet$source_name &lt;- &quot;ABMMC&quot; # adult BMMC sampleSheetCat &lt;- rbind(cb_sampleSheet[,splShtColToKeep], hca_sampleSheet[,splShtColToKeep]) sampleSheetCat %&gt;% #DT::datatable(options = list(dom=&#39;t&#39;)) DT::datatable(options = list(pageLength = 10)) 3.4 10X cellranger reports for CaronBourque2020 #cellrangerDir &lt;- sprintf(&quot;%s/%s/grch38300&quot;, projDir, &quot;CaronBourque2020&quot;) #projDirOsx &lt;- &quot;/Users/baller01/MyMount/clust1b/20200511_FernandesM_ME_crukBiSs2020&quot; # make dir name for each sample of interest # with &#39;Run&#39; column sampleSheet &lt;- sampleSheetCat %&gt;% filter(! source_name == &quot;ABMMC&quot;) cellrangerDirLink &lt;- sprintf(&quot;%s/%s/grch38300&quot;, projDirLink, &quot;CaronBourque2020&quot;) htmlVec &lt;- sprintf(&quot;%s/%s/%s/outs/web_summary.html&quot;, cellrangerDirLink, sampleSheet$Run, sampleSheet$Run) names(htmlVec) &lt;- sampleSheet$Run for(i in 1:length(htmlVec)){ cat(&quot;[&quot;, names(htmlVec)[i], &quot;](&quot;, htmlVec[i],&quot;)\\n\\n&quot;) } SRR9264343 SRR9264344 SRR9264345 SRR9264346 SRR9264347 SRR9264348 SRR9264349 SRR9264350 SRR9264351 SRR9264352 SRR9264353 SRR9264354 # TODO: add links to sample sheet and show with DT::datatable 3.5 10X cellranger reports for HCA’s adult BMMCs #cellrangerDir &lt;- sprintf(&quot;%s/%s/grch38300&quot;, projDir, &quot;CaronBourque2020&quot;) #projDirOsx &lt;- &quot;/Users/baller01/MyMount/clust1b/20200511_FernandesM_ME_crukBiSs2020&quot; # make dir name for each sample of interest # with &#39;Run&#39; column sampleSheet &lt;- sampleSheetCat %&gt;% filter(source_name == &quot;ABMMC&quot;) cellrangerDirLink &lt;- sprintf(&quot;%s/%s/grch38300&quot;, projDirLink, &quot;Hca&quot;) htmlVec &lt;- sprintf(&quot;%s/%s/%s/outs/web_summary.html&quot;, cellrangerDirLink, sampleSheet$Run, sampleSheet$Run) names(htmlVec) &lt;- sampleSheet$Run for(i in 1:length(htmlVec)){ cat(&quot;[&quot;, names(htmlVec)[i], &quot;](&quot;, htmlVec[i],&quot;)\\n\\n&quot;) } MantonBM1 MantonBM2 MantonBM3 MantonBM4 MantonBM5 MantonBM6 MantonBM7 MantonBM8 "]]
